@page "/Login/SignIn"
@rendermode InteractiveServer
@using Genesis.Shared.Users
@using Genesis.Finance.Components
@inject NavigationManager navigationManager
@inject Genesis.Finance.Services.UserService userApi
@inject IJSRuntime jsRuntime
<div class="auth-page">
    <div class="container page">
        <div class="row">
            <div class="col-md-6 offset-md-3 col-xs-12">
                <h1 class="text-xs-center">Sign in</h1>
                <p class="text-xs-center">
                    <a href="/signup">Need an account?</a>
                </p>
               
                <form>
                    <fieldset class="form-group">
                        <input class="form-control form-control-lg" type="text" placeholder="Username" @bind="login.Username" />
                    </fieldset>
                    <fieldset class="form-group">
                        <input class="form-control form-control-lg" type="password" placeholder="Password" @bind="login.Password" />
                    </fieldset>
                    <button class="btn btn-lg btn-primary pull-xs-right" type="button" @onclick="Submit">
                        Sign in
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@code {
    Genesis.Shared.Users.Login login = new();
    async Task Submit()
    {
        var response = await userApi.AttemptAuth(login);

        if (response != null && response.HasSuccessStatusCode)
        {
            navigationManager.NavigateTo("/");
        }
        else
        {
           // errors = response?.Errors ?? new ErrorsModel();
        }
    }
}
