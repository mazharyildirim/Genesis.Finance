@page "/UserManagement/UserList"
@using Genesis.Shared.DTO;

@inject StateService stateService;
@inject UserService userService;
@inject NavigationManager navigationManager
<h3>Kullanıcı Bilgileri</h3>

@if (response!= null)
{

    <GenesisList Data="@response.List" ColumnList="@columnList" OnClickCallback="@Search"
                 TotalPages="@response.TotalPages" NewRecordUrl="/UserManagement/UserEdit"
     TotalCount="@response.TotalCount"
     PageIndex="@response.PageIndex"
     PageSize="@pageSize"
     HasNextPage ="@response.HasNextPage" HasPreviousPage ="@response.HasPreviousPage" PrimaryKey="userId"></GenesisList>
}
else
{
    <div>Yükleniyor...</div>
}

@code {
    Genesis.Shared.Users.UserResponse response = null;
    List<Genesis.Shared.ComponentModel.ListItem> columnList = null;
    private Int32 pageSize = 30;
    protected override async Task OnInitializedAsync()
    {
        if (stateService.IsSignedIn)
        {

            var userListResponse = await userService.GetUsers("", "","","", pageSize,0);
            if (userListResponse.HasSuccessStatusCode)
            {
                response = userListResponse.Value;
                columnList = new List<Genesis.Shared.ComponentModel.ListItem>();
                columnList.Add(new Genesis.Shared.ComponentModel.ListItem() { ColummName = "firstname",DisplayName ="Ad" });
                columnList.Add(new Genesis.Shared.ComponentModel.ListItem() { ColummName = "lastname",DisplayName ="Soyad" });
                columnList.Add(new Genesis.Shared.ComponentModel.ListItem() { ColummName = "username",DisplayName ="Kullanıcı Adı" });
            }

        }
        else
        {
            navigationManager.NavigateTo("/Login/Login/SignIn");
        }
    }



    private async void Search(Genesis.Shared.ComponentModel.ListCriteriaModel _listCriteriaModel)
    {
        var userListResponse = await userService.GetUsers(_listCriteriaModel.FilterColumn, _listCriteriaModel.FilterQuery
            , _listCriteriaModel.SortColumn,_listCriteriaModel.SortOrder,  _listCriteriaModel.PageSize,_listCriteriaModel.PageIndex);
        if (userListResponse.HasSuccessStatusCode)
        {
            pageSize = userListResponse.Value.PageSize;
            response = userListResponse.Value;
            columnList = new List<Genesis.Shared.ComponentModel.ListItem>();
            columnList.Add(new Genesis.Shared.ComponentModel.ListItem() { ColummName = "firstname", DisplayName = "Ad" });
            columnList.Add(new Genesis.Shared.ComponentModel.ListItem() { ColummName = "lastname", DisplayName = "Soyad" });
            columnList.Add(new Genesis.Shared.ComponentModel.ListItem() { ColummName = "username", DisplayName = "Kullanıcı Adı" });
        }
        StateHasChanged();
    }
}
