@layout Genesis.WebApp.Layout.LoginLayout
@page "/Login/SignIn"

@using Genesis.Shared
@using Genesis.Shared.Users
@using Genesis.WebApp.Models
@using Genesis.WebApp.Pages
@inject NavigationManager navigationManager
@inject Genesis.WebApp.Services.UserService userApi
@inject IJSRuntime jsRuntime
<body id="LoginForm">
    <div class="container">
        <h1 class="form-heading">Giriş</h1>
        <div class="login-form">
            <div class="main-div">
                <div class="panel">
                    <h2>Kullanıcı Girişi</h2>
                 </div>
                <p> <ErrorMessage Messages="@errorMessage" ></ErrorMessage></p>
                <form id="Login">
                    <div class="form-group">
                        <input class="form-control" type="text" placeholder="Kullanıcı Adı" @bind="login.Username" />
                    </div>
                    <div class="form-group">
                        <input class="form-control form-control-lg" type="password" placeholder="Şifre" @bind="login.Password"  />
                    </div>
                    <button class="btn btn-primary" type="button" @onclick="Submit">
                        Giriş
                    </button>
                </form>
            </div>
         
        </div>
    </div>
</body>
@code {
    Genesis.Shared.Users.Login login = new();
    private ErrorMessages errorMessage = new ErrorMessages();
    async Task Submit()
    {
        if (string.IsNullOrEmpty(login.Username))
        {
            errorMessage.detail = "Kullanıcı adı giriniz.";
            return;
        }

        if (string.IsNullOrEmpty(login.Password))
        {
            errorMessage.detail = "Şifre giriniz.";
            return;
        }

        var response = await userApi.AttemptAuth(login);

        if (response != null && response.HasSuccessStatusCode )
        {
            navigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = response.Errors;
        }
    }
  
}
